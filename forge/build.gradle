import com.modrinth.minotaur.TaskModrinthUpload
import org.gradle.api.tasks.Copy

plugins {
    alias libs.plugins.shadow
    alias libs.plugins.task.tree
}



configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin since it *excludes* files.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    forge {
        mixinConfigs = ["hardcraft.mixins.json", "hardcraft.forge.mixins.json"]
    }
}

dependencies {
    forge "net.minecraftforge:forge:${libs.versions.minecraft.get()}-${libs.versions.forge.get()}"

    // Uncomment to add the test mod at runtime
//    runtimeOnly project(path: ":TestForgeMod", configuration: "namedElements")

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier.set "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier.set "forge"
}
jar {
    manifest {
        attributes([
                "MixinConfigs": "hardcraft.mixins.json"
        ])
    }
    archiveClassifier.set "dev"
}


java {
    withSourcesJar()
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

curseforge {
    apiKey = project.hasProperty("curseforge_api_key") ? project.curseforge_api_key : ""
    project {
        id = curseforge_id
        releaseType = 'release'
        addGameVersion "Forge"
        addGameVersion curseforge_mc_version
        changelogType = "markdown"
        changelog = rootProject.file("changelog.md")

        mainArtifact(remapJar) {
            displayName = "$mod_name $total_version Forge"
        }
    }

    options {
        forgeGradleIntegration = false
    }
}

modrinth {
    group = "upload"
    token =  project.hasProperty("modrinth_api_key") ? project.modrinth_api_key : ""
    projectId = 'yM94ont6'
    versionNumber = total_version + "-forge" // Will fail if Modrinth has this version already
    versionName = "$mod_name $total_version Forge"
    uploadFile = remapJar
    gameVersions = [modrinth_mc_version]
    loaders = ["forge"]
    changelog = rootProject.file("changelog.md").text
    versionType = "release"
}


task publishForge {
    group = "publishing"
    afterEvaluate {
        dependsOn(curseforge442354)
        dependsOn(tasks.modrinth)
    }
}
