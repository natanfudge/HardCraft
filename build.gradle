plugins {
    alias libs.plugins.architectury.loom apply false
    alias libs.plugins.loom.quiltflower apply false
    alias libs.plugins.minotaur apply false
    alias libs.plugins.architectury.plugin
    alias libs.plugins.cursegradle
    alias libs.plugins.kotlin
//    alias libs.plugins.kotlin.serialization
    id 'maven-publish'
}

architectury {
    minecraft = libs.versions.minecraft.get()
}

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: 'maven-publish'
    apply plugin: 'com.matthewprenger.cursegradle'
    apply plugin: "com.modrinth.minotaur"
    apply plugin: "io.github.juuxel.loom-vineflower"

    dependencies {
        minecraft libs.minecraft
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings "net.fabricmc:yarn:${libs.versions.yarn.mappings.get()}:v2"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "org.jetbrains.kotlin.jvm"
//    apply plugin: "org.jetbrains.kotlin.plugin.serialization"

    ext.mod_version = libs.versions.mod.version.get()
    ext.minecraft_version = libs.versions.minecraft.get()
    ext.total_version = "$mod_version+$minecraft_version"

    def cf = libs.versions.overrides.curseforge.get()
    def mr = libs.versions.overrides.modrinth.get()

    ext.curseforge_mc_version = cf == 'mc' ? minecraft_version : cf
    ext.modrinth_mc_version = mr == 'mc' ? minecraft_version : mr

    archivesBaseName = rootProject.archives_base_name
    version = ext.total_version
    group = rootProject.maven_group

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(17))
        }
        withSourcesJar()
    }

}

task publishAll {
    group = "upload"
    dependsOn("fabric:publishFabric")
    dependsOn("forge:publishForge")
}
